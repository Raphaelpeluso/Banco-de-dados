CREATE TABLE IF NOT EXISTS CLIENTE(
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NOME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(120) UNIQUE
);

INSERT INTO CLIENTE(NOME, EMAIL) VALUES ('Arnaldo Arantes', 'arnarldoarantes@gmail.com');
INSERT INTO CLIENTE(NOME, EMAIL) VALUES ('Edson Ferreira', 'edsonferreira@gmail.com');
INSERT INTO CLIENTE(NOME, EMAIL) VALUES ('Marcos Silva', 'marcosilva@gmail.com');

SELECT ID, NOME, EMAIL FROM CLIENTE;

CREATE TABLE IF NOT EXISTS PRODUTOS(
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NOME VARCHAR2(100) NOT NULL,
    PRECO NUMBER(10,2) NOT NULL CHECK (PRECO >= 0),
    TIPO VARCHAR2(50) NOT NULL
);

INSERT INTO PRODUTOS (NOME, PRECO, TIPO) VALUES ('Notebook x', 3000, 'Notebook');
INSERT INTO PRODUTOS (NOME, PRECO, TIPO) VALUES ('Notebook y', 3500, 'Notebook');
INSERT INTO PRODUTOS (NOME, PRECO, TIPO) VALUES ('Celular z', 2000, 'Celular');

UPDATE PRODUTOS SET PRECO = PRECO * 1.10 WHERE TIPO = 'Notebook';

SELECT ID, NOME, PRECO, TIPO FROM PRODUTOS;

CREATE TABLE IF NOT EXISTS PEDIDOS(
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    CLIENTE_ID NUMBER REFERENCES CLIENTE(ID),
    PRODUTOS_ID NUMBER REFERENCES PRODUTOS(ID),
    STATUS VARCHAR2(20) NOT NULL CHECK (STATUS IN ('ABERTO', 'FINALIZADO', 'CANCELADO'))
);

INSERT INTO PEDIDOS (CLIENTE_ID, PRODUTOS_ID, STATUS) VALUES (1, 1, 'ABERTO');
INSERT INTO PEDIDOS (CLIENTE_ID, PRODUTOS_ID, STATUS) VALUES (2, 2, 'CANCELADO');
INSERT INTO PEDIDOS (CLIENTE_ID, PRODUTOS_ID, STATUS) VALUES (21, 3, 'FINALIZADO');
INSERT INTO PEDIDOS (CLIENTE_ID, PRODUTOS_ID, STATUS) VALUES (1, 2, 'CANCELADO');

DELETE FROM PEDIDOS WHERE STATUS = 'CANCELADO';

SELECT ID, CLIENTE_ID, PRODUTOS_ID, STATUS FROM PEDIDOS;

CREATE TABLE IF NOT EXISTS CLIENTES_STG(
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NOME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(120) NOT NULL
);

INSERT INTO CLIENTES_STG (NOME, EMAIL) VALUES ('Rodrigo Faria', 'rodrigofaria@gmail.com');
INSERT INTO CLIENTES_STG (NOME, EMAIL) VALUES ('Alexandre Frota', 'alexandefrota@gmail.com');

MERGE INTO CLIENTE C
USING CLIENTES_STG S
ON (C.EMAIL = S.EMAIL)
WHEN MATCHED THEN
    UPDATE SET C.NOME = S.NOME
WHEN NOT MATCHED THEN
    INSERT(C.NOME, C.EMAIL) VALUES (S.NOME, S.EMAIL);

SELECT ID, NOME, EMAIL FROM CLIENTES_STG;