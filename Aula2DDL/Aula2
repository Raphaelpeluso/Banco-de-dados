-- Tabela ALUNO
CREATE TABLE ALUNO (
    id_aluno NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RA VARCHAR2(20) UNIQUE NOT NULL,
    nome VARCHAR2(100) NOT NULL,
    curso VARCHAR2(100),
    email VARCHAR2(150)
);

-- Tabela LIVRO
CREATE TABLE LIVRO (
    id_livro NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ISBN VARCHAR2(20) UNIQUE NOT NULL,
    titulo VARCHAR2(200) NOT NULL,
    ano_publicacao NUMBER(4)
);

-- Tabela AUTOR
CREATE TABLE AUTOR (
    id_autor NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    nacionalidade VARCHAR2(50)
);

-- Tabela EXEMPLAR
CREATE TABLE EXEMPLAR (
    id_exemplar NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    estado VARCHAR2(50),
    disponibilidade CHAR(1) CHECK (disponibilidade IN ('S','N')),
    id_livro NUMBER NOT NULL,
    CONSTRAINT fk_exemplar_livro FOREIGN KEY (id_livro)
        REFERENCES LIVRO (id_livro)
);

-- Tabela EMPRESTIMO
CREATE TABLE EMPRESTIMO (
    id_emprestimo NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_aluno NUMBER NOT NULL,
    id_exemplar NUMBER NOT NULL,
    data_retirada DATE NOT NULL,
    data_prevista DATE NOT NULL,
    data_devolucao DATE,
    CONSTRAINT fk_emprestimo_aluno FOREIGN KEY (id_aluno)
        REFERENCES ALUNO (id_aluno),
    CONSTRAINT fk_emprestimo_exemplar FOREIGN KEY (id_exemplar)
        REFERENCES EXEMPLAR (id_exemplar)
);

-- Tabela LIVRO_AUTOR (associação N:N)
CREATE TABLE LIVRO_AUTOR (
    id_livro_autor NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_livro NUMBER NOT NULL,
    id_autor NUMBER NOT NULL,
    CONSTRAINT fk_livroautor_livro FOREIGN KEY (id_livro)
        REFERENCES LIVRO (id_livro),
    CONSTRAINT fk_livroautor_autor FOREIGN KEY (id_autor)
        REFERENCES AUTOR (id_autor),
    CONSTRAINT uq_livro_autor UNIQUE (id_livro, id_autor) -- evita duplicidade
);
